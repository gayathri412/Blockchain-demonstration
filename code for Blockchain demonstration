import tkinter as tk
from tkinter import ttk
import hashlib
import time

class Block:
    def __init__(self, index, previous_hash, timestamp, data, hash):
        self.index = index
        self.previous_hash = previous_hash
        self.timestamp = timestamp
        self.data = data
        self.hash = hash

def calculate_hash(index, previous_hash, timestamp, data):
    value = str(index) + str(previous_hash) + str(timestamp) + str(data)
    return hashlib.sha256(value.encode()).hexdigest()

def create_genesis_block():
    return Block(0, "0", time.time(), "Genesis Block", calculate_hash(0, "0", time.time(), "Genesis Block"))

def create_new_block(previous_block, data):
    index = previous_block.index + 1
    timestamp = time.time()
    hash = calculate_hash(index, previous_block.hash, timestamp, data)
    return Block(index, previous_block.hash, timestamp, data, hash)

class BlockchainApp:
    def __init__(self, master):
        self.master = master
        self.master.title("Blockchain GUI")

        self.blockchain = [create_genesis_block()]
        self.previous_block = self.blockchain[0]

        self.create_widgets()

    def create_widgets(self):
        self.label = ttk.Label(self.master, text="Blockchain Explorer", font=("Arial", 16))
        self.label.grid(row=0, column=0, columnspan=2, pady=10)

        self.textbox = tk.Text(self.master, height=5, width=40)
        self.textbox.grid(row=1, column=0, columnspan=2, pady=5)

        self.add_block_button = ttk.Button(self.master, text="Add Block", command=self.add_block)
        self.add_block_button.grid(row=2, column=0, pady=10)

        self.display_button = ttk.Button(self.master, text="Display Blockchain", command=self.display_blockchain)
        self.display_button.grid(row=2, column=1, pady=10)

    def add_block(self):
        data = self.textbox.get("1.0", "end-1c")
        new_block = create_new_block(self.previous_block, data)
        self.blockchain.append(new_block)
        self.previous_block = new_block
        print(f"Block #{new_block.index} has been added to the blockchain!")

    def display_blockchain(self):
        for block in self.blockchain:
            print(f"Index: {block.index}")
            print(f"Previous Hash: {block.previous_hash}")
            print(f"Timestamp: {block.timestamp}")
            print(f"Data: {block.data}")
            print(f"Hash: {block.hash}")
            print("\n")

def main():
    root = tk.Tk()
    app = BlockchainApp(root)
    root.mainloop()

if name == "__main__":
    main()
